% [fieldk, fieldxf_cen, fieldx_ext, fieldr_ext, NX, wf] = init_field(NXs, SIM.testcase, plot_InitField);
function wf = init_field(CTRL, SIM, MESH, ENV)

% initialize a vorticity field
wf{1} = zeros(MESH.NX(1)+2*SIM.mbc, MESH.NX(2)+2*SIM.mbc, MESH.NX(3)+2*SIM.mbc);
wf{2} = zeros(MESH.NX(1)+2*SIM.mbc, MESH.NX(2)+2*SIM.mbc, MESH.NX(3)+2*SIM.mbc);
wf{3} = zeros(MESH.NX(1)+2*SIM.mbc, MESH.NX(2)+2*SIM.mbc, MESH.NX(3)+2*SIM.mbc);  

switch CTRL.testcase   
    case 1
        %% Bump function: SPHERICAL SCALAR FIELD
        c = CTRL.param.c;
        R = CTRL.param.R;
        r_cen = sqrt(MESH.xf_cen{1}.^2 + ...
                     MESH.xf_cen{2}.^2 + ...
                     MESH.xf_cen{3}.^2);

        wf{2}(r_cen < R) = 2*c*R^2*exp(-c*R^2./((R - r_cen(r_cen < R))...
            .*(R + r_cen(r_cen < R)))).*(3*R^4 - 2*R^2*r_cen(r_cen < R).^2 ...
            - r_cen(r_cen < R).^4 - 2*c*R^2*r_cen(r_cen < R).^2) ...
            .*(R^2 - r_cen(r_cen < R).^2).^(-4);
        
    case 2
        %% Bump function: VORTEX RING (in the xy-plane)
        c = CTRL.param.c;
        R = CTRL.param.R;
        wf_mag  = zeros(size(wf{1}));
        r_cen   = sqrt(MESH.xf_cen{1}.^2 + MESH.xf_cen{2}.^2);
        phi_cen = sqrt((r_cen-R).^2 + MESH.xf_cen{3}.^2);
        theta   = atan2(MESH.xf_cen{2},MESH.xf_cen{1});

        wf_mag(phi_cen < R) = exp(-c*R^2./(2*R*r_cen(phi_cen < R) - ...
            r_cen(phi_cen < R).^2 - MESH.xf_cen{3}(phi_cen < R).^2)) ...
            .*(4*c^2*R^4*MESH.xf_cen{3}(phi_cen < R).^2.*r_cen(phi_cen < R).^2 ...
            - 16*R^4*r_cen(phi_cen < R).^4 ...
            + 32*R^3*r_cen(phi_cen < R).^5 ...
            - 24*R^2*r_cen(phi_cen < R).^6 ...
            + 8*R*r_cen(phi_cen < R).^7 ...
            - 4*r_cen(phi_cen < R).^6.*MESH.xf_cen{3}(phi_cen < R).^2 ...
            - 6*r_cen(phi_cen < R).^4.*MESH.xf_cen{3}(phi_cen < R).^4 ...
            - 4*r_cen(phi_cen < R).^2.*MESH.xf_cen{3}(phi_cen < R).^6 ...
            - 8*c*R^5*r_cen(phi_cen < R).^3 ...
            + 8*c*R^4*r_cen(phi_cen < R).^4 ...
            - 6*c*R^3*r_cen(phi_cen < R).^5 ...
            + 4*c^2*R^6*r_cen(phi_cen < R).^2 ...
            - 8*c^2*R^5*r_cen(phi_cen < R).^3 ...
            + 4*c^2*R^4*r_cen(phi_cen < R).^4 ...
            + 2*c*R^2*r_cen(phi_cen < R).^6 ...
            + 32*R^3*r_cen(phi_cen < R).^3.*MESH.xf_cen{3}(phi_cen < R).^2 ...
            - 48*R^2*r_cen(phi_cen < R).^4.*MESH.xf_cen{3}(phi_cen < R).^2 ...
            - 24*R^2*r_cen(phi_cen < R).^2.*MESH.xf_cen{3}(phi_cen < R).^4 ...
            + 24*R*r_cen(phi_cen < R).^5.*MESH.xf_cen{3}(phi_cen < R).^2 ...
            + 24*R*r_cen(phi_cen < R).^3.*MESH.xf_cen{3}(phi_cen < R).^4 ...
            + 8*R*r_cen(phi_cen < R).*MESH.xf_cen{3}(phi_cen < R).^6 ...
            + 2*c*R^3*r_cen(phi_cen < R).*MESH.xf_cen{3}(phi_cen < R).^4 ...
            + 2*c*R^2*r_cen(phi_cen < R).^2.*MESH.xf_cen{3}(phi_cen < R).^4 ...
            - 4*c*R^3*r_cen(phi_cen < R).^3.*MESH.xf_cen{3}(phi_cen < R).^2 ...
            + 4*c*R^2*r_cen(phi_cen < R).^4.*MESH.xf_cen{3}(phi_cen < R).^2 ...
            - r_cen(phi_cen < R).^8 - MESH.xf_cen{3}(phi_cen < R).^8) ...
            .*(2*R*r_cen(phi_cen < R) - ...
            r_cen(phi_cen < R).^2 - MESH.xf_cen{3}(phi_cen < R).^2).^(-4) ...
            .*r_cen(phi_cen < R).^(-2);

        wf{1} = sin(theta).*wf_mag;
        wf{2} = -cos(theta).*wf_mag;

    case 3
        %% vortex rings in the xy-plane
        gamma  = CTRL.Re * ENV.kin_visc;
        r      = sqrt( MESH.xf{1}.^2 + MESH.xf{2}.^2 );
        rho    = sqrt( (r - CTRL.Rmajor).^2 + MESH.xf{3}.^2 );
        theta  = atan2(MESH.xf{2}, MESH.xf{1});
        
        wf_mag = gamma/(pi*CTRL.Rminor^2) .* exp(-(rho./CTRL.Rminor).^2);
        wf{1}  = +sin(theta).*wf_mag;
        wf{2}  = -cos(theta).*wf_mag;
        
    otherwise
        error('testcase not recognized.');
        
end

end % function

